<project name="MAIN" default="Installation"  basedir=".">
 
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- Properties expected:                                                 -->
  <!--   proj            (project)                                          -->
  <!--   vers            (version)                                          -->
  <!--   comp            (component: either "" or "/componentname")         -->
  <!--   projectsDir                                                        -->
  <!--   targetDir                                                          -->
  <!--   append                                                             -->
  <!--   checkout                                                           -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->



  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Main Targets ooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->


  <target name="install" depends="InstallInit">
    <ant antfile="../${proj}/build.xml" target="${proj}${comp}-Installation">
      <property name="project" value="${proj}"/>
    </ant>

    <replace dir="${targetDir}/bin" 
             propertyFile="${targetDir}/config/install.prop" > 
      <include name="**/*" />
      <replacefilter token="@perl@" property="perl"/>
    </replace> 
  </target>  


  <target name="webinstall" depends="InstallInit">
    <ant antfile="../${proj}/build.xml" target="${proj}${comp}-WebInstallation">
      <property name="project" value="${proj}"/>
    </ant>
  </target>  

  <target name="package" depends="InstallInit">
    <ant antfile="../${proj}/build.xml" target="${proj}${comp}-Distributable">
      <property name="project" value="${proj}"/>
    </ant>
  </target>  


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Initialization ooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="InstallInit" depends="validateTargetDir, checkoutProj,
                                      installConfigFile"/>

  <target name="validateTargetDir">
    <fail unless="targetDir">
       Must provide -DtargetDir= property to specify where to build to
    </fail>

    <condition property="targetDirExists">
       <and>
         <available file="${targetDir}" />
         <isfalse value="${append}" />
       </and>
    </condition>  

    <fail if="targetDirExists">
      Error: Target directory ${targetDir} already exists and you have not set the 'append' property to true
    </fail>
  </target>  


  <target name="installConfigFile">
    <ant target="configFile">
      <property name="cFileName" value="install.prop"/>
      <property name="cFileSrcDir" value="${projectsDir}/install/config"/>
    </ant>
  </target>  


  <target name="checkoutProj" if="checkout">
    <antcall target="cvsCheckOut">
      <param name="package" value="${proj}"/>
    </antcall>
  </target>  


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  SUBROUTINES  ooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="defaultProjectInstall">
    <concat destfile="${targetDir}/versions" append="yes">
      <fileset dir="${projectsDir}/${project}" >
         <include name="version"/>
      </fileset>
    </concat>
  </target>

  <target name="defaultComponentInstall">
    <property name="componentDir" value="${projectsDir}/${component}"/>

    <echo message="."/>
    <echo message="Installing ${component}"/>

    <available property="componentAvail" file="${projectsDir}/${component}"/>
    <fail unless="componentAvail">
       Component directory ${projectsDir}/${component} not found.
    </fail>

    <antcall target="componentPartCopy">
      <param name="part" value="bin"/>
      <param name="to" value="bin"/>
      <param name="prefix" value=""/>
    </antcall>

    <chmod perm="+x">
      <fileset dir="${targetDir}/bin"/>
    </chmod>

    <antcall target="componentPartCopy">
      <param name="part" value="lib/perl"/>
      <param name="to" value="lib/perl"/>
      <param name="prefix" value="${component}/"/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="lib"/>
      <param name="to" value="lib"/>
      <param name="prefix" value=""/>
      <param name="exclude" value="perl"/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="plugin/perl"/>
      <param name="to" value="lib/perl"/>
      <param name="prefix" value="${component}/Plugin/"/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="plugin"/>
      <param name="to" value="lib"/>
      <param name="exclude" value="perl"/>
      <param name="prefix" value=""/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="config"/>
      <param name="to" value="config"/>
      <param name="prefix" value=""/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="doc"/>
      <param name="to" value="doc"/>
      <param name="prefix" value="${component}/"/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="test"/>
      <param name="to" value="test"/>
      <param name="prefix" value="${component}/"/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="data"/>
      <param name="to" value="data"/>
      <param name="prefix" value="${component}/"/>
    </antcall>
  </target>  


  <target name="defaultWebComponentInstall">
    <property name="componentDir" value="${projectsDir}/${component}"/>

    <echo message="."/>
    <echo message="Installing ${component}"/>

    <available property="componentAvail" file="${projectsDir}/${component}"/>
    <fail unless="componentAvail">
       Component directory ${projectsDir}/${component} not found.
    </fail>

   <antcall target="componentPartCopy">
      <param name="part" value="htdocs"/>
      <param name="to" value="htdocs"/>
      <param name="prefix" value=""/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="cgi-bin"/>
      <param name="to" value="cgi-bin"/>
      <param name="prefix" value=""/>
    </antcall>

    <antcall target="componentPartCopy">
      <param name="part" value="servlets"/>
      <param name="to" value="servlets"/>
      <param name="prefix" value=""/>
    </antcall>
  </target>  

  <target name="componentPartCopy">
    <available property="partAvailable" file="${componentDir}/${part}"/>
    <antcall target="componentPartCopySub"/>
  </target>  

  <target name="componentPartCopySub" if="partAvailable">
    <mkdir dir="${targetDir}/${to}/${prefix}"/>
    <copy todir="${targetDir}/${to}/${prefix}">
      <fileset dir="${componentDir}/${part}" >
        <include name="**"/>
        <exclude name="**/CVS/*" />
        <exclude name="${exclude}/" />
      </fileset>
    </copy>
  </target>  

  <target name="configFile">
    <property name="cFile" value="${cFileSrcDir}/${cFileName}"/>
    <property name="cFileTarget" value="${targetDir}/config/${cFileName}"/>

    <copy file="${cFile}.sample" toDir="${targetDir}/config"/>

    <available file="${cFileTarget}" property="cFileTargetExists"/>

    <fail unless="cFileTargetExists">
      Error: You must configure the file ${cFileTarget}.  To create it, copy ${cFileTarget}.sample to ${cFileTarget} and edit ${cFileTarget}, giving it the proper values for your installation. 
    </fail>
  </target>  

  <target name="projectCheckOut">
    <antcall target="cvsCheckOut">
      <param name="package" value="${project}"/>
    </antcall>
    <echo message="${project} ${version}" destfile="${projectsDir}/${project}/version"/>
  </target>

  <target name="cvsCheckOut">
    <condition property="haveVersion">
       <equals arg1="latest" arg2="${version}"/>
    </condition>
    <antcall target="cvsHaveVersion"/>
    <antcall target="cvsDontHaveVersion"/>
  </target>

  <target name="cvsHaveVersion">
    <cvs package="${package}" dest="${projectsDir}" tag="${version}" />
  </target>

  <target name="cvsDontHaveVersion">
    <cvs package="${package}" dest="${projectsDir}" />
  </target>

</project>


